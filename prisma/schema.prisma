// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = env("DATABASE_PROVIDER")
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  avatarUrl String?
  
  // Relations
  assignedTasks Task[]    @relation("AssignedTasks")
  ownedProjects Project[] @relation("ProjectOwner")
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@map("users")
}

model Project {
  id          String  @id @default(uuid())
  name        String
  description String?
  color       String? @default("#6366f1")
  
  // Relations
  ownerId String
  owner   User   @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  tasks   Task[]
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@map("projects")
}

model Task {
  id          String  @id @default(uuid())
  title       String
  description String?
  status      TaskStatus   @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  position    Int          @default(0)
  
  // Relations
  assigneeId String?
  assignee   User?    @relation("AssignedTasks", fields: [assigneeId], references: [id], onDelete: SetNull)
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  // Dates
  dueDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("tasks")
}

enum Role {
  USER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
